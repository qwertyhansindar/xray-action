name: 'Run XRay Scan'
description: 'Will execute XRay scan of provided artifact'
author: ''
inputs:
  build_name:
    description: 'Name of the build to scan'
    required: true
  build_number:
    description: 'Number of the build to scan'
    required: true

runs:
  using: "composite"
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Checking inputs
      shell: bash
      env:
        BUILD_NAME: ${{ inputs.build_name }}
        BUILD_NUMBER: ${{ inputs.build_number }}
      run: |
        source "${GITHUB_ACTION_PATH}/lib/CI_LIBS.sh"
        
        ci_error=0
        
        for var in BUILD_NAME BUILD_NUMBER; do
          if [ -z "${!var}" ]; then
            echo_error "${var} was not provided or empty." >&2
            ci_error=1
          fi
          
          echo "${var}=${!var}" >> $GITHUB_PATH
        done
        
        if [ "${ci_error}" -ne 0 ]; then
          echo_error "Not all inputs was provided" >&2
          exit 1
        fi

    - name: Checking pre-requisites
      shell: bash
      run: |
        pwd
        ls -lsa
        
        source "${GITHUB_ACTION_PATH}/lib/CI_LIBS.sh"
        echo_info "CI_LIBS was loaded." >&2
        
        echo_info "Checking JFrog CLI." >&2
        if ! command -v "jf" > /dev/null; then
          echo_error "JFrog CLI was not found in the system." >&2
          exit 1
        fi
        
        jf --version
        jf c show
        jf rt ping

#    - name: Random Number Generator
#      id: random-number-generator
#      run: echo "random-number=$(echo $RANDOM)" >> $GITHUB_OUTPUT
#      shell: bash
#
#    - name: Set GitHub Path
#      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
#      shell: bash
#      env:
#        GITHUB_ACTION_PATH: ${{ github.action_path }}
#
#    - name: Run goodbye.sh
#      run: goodbye.sh
#      shell: bash